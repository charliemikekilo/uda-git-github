When would you want to use a remote repository rather than keeping all your work local?

whenever you need to share or access code apart from your local machine. also, to store an extra copy of the code somewhere that is safe

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

it allows the developer to pull changes whenever he/she is ready to pull changes from a remote. otherwise, pulled changes may interfere with code in progress. also the developer is able to be aware of what changes were pulled

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks are clones within github that allows developers to work on a copy of someone else's repository

clones are copies of another repository and can exist within local git repositories and from github

branches are copies of another code base that allows for work to be done outside of the master branch

What is the benefit of having a copy of the last known state of the remote stored locally?

the benefit of having a copy locally is that local copies are independent from what other users to the remote repository do to the repository

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

i would have to excessively comment my code if i wanted to collaborate without version control. also, i would need to create multiple directories as snapshots of my project. reverting simple versions back would be easier but almost everything such as merging and pushing code would be harder.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

a separate branch should be used whenever someone is building a new feature, a new version, or fixing a bug. working outside of master preserves what is supposed to be the main code base apart from a change from the master code base